{"version":3,"file":"bundler.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/extension/bundler.ts"],"names":[],"mappings":"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","sourcesContent":["import {ExtensionsPayloadStore} from './payload/store.js'\nimport {ExtensionDevOptions} from '../extension.js'\nimport {bundleExtension} from '../../extensions/bundle.js'\n\nimport {AppInterface} from '../../../models/app/app.js'\nimport {updateExtensionConfig, updateExtensionDraft} from '../update-extension.js'\nimport {buildFunctionExtension} from '../../../services/build/extension.js'\nimport {ExtensionInstance} from '../../../models/extensions/extension-instance.js'\nimport {AbortController, AbortSignal} from '@shopify/cli-kit/node/abort'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {outputDebug, outputInfo, outputWarn} from '@shopify/cli-kit/node/output'\nimport {fileExists} from '@shopify/cli-kit/node/fs'\nimport {FSWatcher} from 'chokidar'\nimport {Writable} from 'stream'\n\nexport interface WatchEvent {\n  path: string\n  type: 'build' | 'localization'\n}\n\nexport interface FileWatcherOptions {\n  devOptions: ExtensionDevOptions\n  payloadStore: ExtensionsPayloadStore\n}\n\nexport interface FileWatcher {\n  close: () => void\n}\n\nexport async function setupBundlerAndFileWatcher(options: FileWatcherOptions) {\n  const {default: chokidar} = await import('chokidar')\n  const abortController = new AbortController()\n\n  const bundlers: Promise<void>[] = []\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  options.devOptions.extensions.forEach(async (extension) => {\n    bundlers.push(\n      bundleExtension({\n        minify: false,\n        outputPath: extension.outputPath,\n        environment: 'development',\n        env: {\n          ...(options.devOptions.appDotEnvFile?.variables ?? {}),\n          APP_URL: options.devOptions.url,\n        },\n        stdin: {\n          contents: extension.getBundleExtensionStdinContent(),\n          resolveDir: extension.directory,\n          loader: 'tsx',\n        },\n        stderr: options.devOptions.stderr,\n        stdout: options.devOptions.stdout,\n        watchSignal: abortController.signal,\n        watch: async (result) => {\n          const error = (result?.errors?.length ?? 0) > 0\n          outputDebug(\n            `The Javascript bundle of the UI extension with ID ${extension.devUUID} has ${\n              error ? 'an error' : 'changed'\n            }`,\n            error ? options.devOptions.stderr : options.devOptions.stdout,\n          )\n\n          try {\n            await options.payloadStore.updateExtension(extension, options.devOptions, {\n              status: error ? 'error' : 'success',\n            })\n            // eslint-disable-next-line no-catch-all/no-catch-all\n          } catch {\n            // ESBuild handles error output\n          }\n        },\n        sourceMaps: true,\n      }),\n    )\n\n    const localeWatcher = chokidar\n      .watch(joinPath(extension.directory, 'locales', '**.json'))\n      .on('change', (_event, path) => {\n        outputDebug(`Locale file at path ${path} changed`, options.devOptions.stdout)\n        options.payloadStore\n          .updateExtension(extension, options.devOptions)\n          .then((_closed) => {\n            outputDebug(`Notified extension ${extension.devUUID} about the locale change.`, options.devOptions.stdout)\n          })\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .catch((_: any) => {})\n      })\n\n    abortController.signal.addEventListener('abort', () => {\n      outputDebug(`Closing locale file watching for extension with ID ${extension.devUUID}`, options.devOptions.stdout)\n      localeWatcher\n        .close()\n        .then(() => {\n          outputDebug(`Locale file watching closed for extension with ${extension.devUUID}`, options.devOptions.stdout)\n        })\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          outputDebug(\n            `Locale file watching failed to close for extension with ${extension.devUUID}: ${error.message}`,\n            options.devOptions.stderr,\n          )\n        })\n    })\n  })\n\n  await Promise.all(bundlers)\n\n  return {\n    close: () => {\n      abortController.abort()\n    },\n  }\n}\n\ninterface SetupDraftableExtensionBundlerOptions {\n  extension: ExtensionInstance\n  app: AppInterface\n  url: string\n  token: string\n  apiKey: string\n  registrationId: string\n  stderr: Writable\n  stdout: Writable\n  signal: AbortSignal\n}\n\nexport async function setupDraftableExtensionBundler({\n  extension,\n  app,\n  url,\n  token,\n  apiKey,\n  registrationId,\n  stderr,\n  stdout,\n  signal,\n}: SetupDraftableExtensionBundlerOptions) {\n  return bundleExtension({\n    minify: false,\n    outputPath: extension.outputPath,\n    environment: 'development',\n    env: {\n      ...(app.dotenv?.variables ?? {}),\n      APP_URL: url,\n    },\n    stdin: {\n      contents: extension.getBundleExtensionStdinContent(),\n      resolveDir: extension.directory,\n      loader: 'tsx',\n    },\n    stderr,\n    stdout,\n    watchSignal: signal,\n\n    watch: async (result) => {\n      const error = (result?.errors?.length ?? 0) > 0\n      outputInfo(\n        `The Javascript bundle of the extension with ID ${extension.devUUID} has ${error ? 'an error' : 'changed'}`,\n        error ? stderr : stdout,\n      )\n      if (error) return\n\n      await updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr})\n    },\n  })\n}\n\ninterface SetupConfigWatcherOptions {\n  extension: ExtensionInstance\n  token: string\n  apiKey: string\n  registrationId: string\n  stdout: Writable\n  stderr: Writable\n  signal: AbortSignal\n}\n\nexport async function setupConfigWatcher({\n  extension,\n  token,\n  apiKey,\n  registrationId,\n  stdout,\n  stderr,\n  signal,\n}: SetupConfigWatcherOptions) {\n  const {default: chokidar} = await import('chokidar')\n\n  const configWatcher = chokidar.watch(extension.configuration.path).on('change', (_event, _path) => {\n    outputInfo(`Config file at path ${extension.configuration.path} changed`, stdout)\n    updateExtensionConfig({\n      extension,\n      token,\n      apiKey,\n      registrationId,\n      stdout,\n      stderr,\n    }).catch((_: unknown) => {})\n  })\n\n  signal.addEventListener('abort', () => {\n    outputDebug(`Closing config file watching for extension with ID ${extension.devUUID}`, stdout)\n    configWatcher\n      .close()\n      .then(() => {\n        outputDebug(`Config file watching closed for extension with ${extension.devUUID}`, stdout)\n      })\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .catch((error: any) => {\n        outputDebug(\n          `Config file watching failed to close for extension with ${extension.devUUID}: ${error.message}`,\n          stderr,\n        )\n      })\n  })\n}\n\nexport interface SetupFunctionWatcherOptions {\n  extension: ExtensionInstance\n  app: AppInterface\n  stdout: Writable\n  stderr: Writable\n  signal: AbortSignal\n  token: string\n  apiKey: string\n  registrationId: string\n}\n\nexport async function setupFunctionWatcher({\n  extension,\n  app,\n  stdout,\n  stderr,\n  signal,\n  token,\n  apiKey,\n  registrationId,\n}: SetupFunctionWatcherOptions) {\n  const {default: chokidar} = await import('chokidar')\n\n  const rebuildAndRedeployWatchPaths = extension.watchPaths\n  const redeployWatchPaths: string[] = []\n\n  if (!rebuildAndRedeployWatchPaths) {\n    outputWarn(\n      `Function extension ${extension.localIdentifier} is missing the 'build.watch' setting, automatic builds are disabled.`,\n      stdout,\n    )\n    return\n  }\n\n  if (await fileExists(joinPath(extension.directory, 'locales'))) {\n    redeployWatchPaths.push(joinPath(extension.directory, 'locales', '**.json'))\n  }\n\n  outputDebug(\n    `\nWatching function extension: ${extension.localIdentifier} for:\nRebuild and Redeploy Paths:\n\\t${rebuildAndRedeployWatchPaths.join('\\n\\t')}\n\nRedeploy Paths:\n\\t${redeployWatchPaths.join('\\n\\t')}\n`.trim(),\n    stdout,\n  )\n\n  const listenForAbortOnWatcher = (watcher: FSWatcher) => {\n    signal.addEventListener('abort', () => {\n      outputDebug(`Closing function file watching for extension with ID ${extension.devUUID}`, stdout)\n      watcher\n        .close()\n        .then(() => {\n          outputDebug(`Function file watching closed for extension with ${extension.devUUID}`, stdout)\n        })\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .catch((error: any) => {\n          outputDebug(\n            `Function file watching failed to close for extension with ${extension.devUUID}: ${error.message}`,\n            stderr,\n          )\n        })\n    })\n  }\n\n  let buildController: AbortController | null\n\n  const functionRebuildAndRedeployWatcher = chokidar.watch(rebuildAndRedeployWatchPaths).on('change', (path) => {\n    outputDebug(`Function extension file at path ${path} changed`, stdout)\n    if (buildController) {\n      // terminate any existing builds\n      buildController.abort()\n    }\n    buildController = new AbortController()\n    const buildSignal = buildController.signal\n    buildFunctionExtension(extension, {\n      app,\n      stdout,\n      stderr,\n      useTasks: false,\n      signal: buildSignal,\n    })\n      .then(() => {\n        if (!buildSignal.aborted) {\n          return updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr})\n        }\n      })\n      .catch((updateError: unknown) => {\n        outputWarn(`Error while deploying updated extension draft: ${JSON.stringify(updateError, null, 2)}`, stdout)\n      })\n  })\n  listenForAbortOnWatcher(functionRebuildAndRedeployWatcher)\n\n  if (redeployWatchPaths.length > 0) {\n    const functionRedeployWatcher = chokidar.watch(redeployWatchPaths).on('change', (path) => {\n      outputDebug(`File at path ${path} changed`, stdout)\n      updateExtensionConfig({\n        extension,\n        token,\n        apiKey,\n        registrationId,\n        stdout,\n        stderr,\n      }).catch((error: unknown) => {\n        outputWarn(\n          `Error while deploying updated extension config: ${JSON.stringify(error, null, 2)} at path ${path}`,\n          stdout,\n        )\n      })\n    })\n    listenForAbortOnWatcher(functionRedeployWatcher)\n  }\n}\n"]}