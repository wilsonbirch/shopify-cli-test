{
  "version": 3,
  "sources": ["../../../app/routes/foo.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/foo.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/foo.tsx\");\n  import.meta.hot.lastModified = \"1701409112498.429\";\n}\n// REMIX HMR END\n\nimport { json } from '@remix-run/node';\nimport { Form, Outlet, useActionData, useLoaderData } from '@remix-run/react';\nexport const loader = () => {\n  return json({\n    message: 'Hello world'\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const body = await request.formData();\n  return Object.fromEntries(body.entries());\n};\nexport default function Foo() {\n  _s();\n  const loaderData = useLoaderData();\n  const actionData = useActionData();\n  return <div style={{\n    width: 200,\n    height: 200,\n    background: 'red'\n  }}>\n      <p>{actionData?.first_name}</p>\n      <Form method='POST'>\n        <input name='first_name' />\n        <input name='last_name' />\n        <button>Submit</button>\n      </Form>\n      <Outlet />\n    </div>;\n}\n_s(Foo, \"Poz7/ZgWo6/SVk8hdeknQK/9fro=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = Foo;\nvar _c;\n$RefreshReg$(_c, \"Foo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AASA,kBAAqB;AACrB;AAqBM;AA1CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yBAA2B,EAAE;AAAA,EACtE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoB;AACpB,cAAY,IAAI,eAAe;AACjC;AAgBe,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,YAAY;AAAA,EACd,GACI;AAAA,uDAAC,OAAG,mDAAY,cAAhB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,MAAK,gBAAZ;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,MACzB,mDAAC,WAAM,MAAK,eAAZ;AAAA;AAAA;AAAA;AAAA,aAAwB;AAAA,MACxB,mDAAC,YAAO,sBAAR;AAAA;AAAA;AAAA;AAAA,aAAc;AAAA,SAHhB;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACA,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,OAXL;AAAA;AAAA;AAAA;AAAA,SAYL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
